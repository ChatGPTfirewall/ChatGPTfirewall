name: Deployment-two

on:
  workflow_dispatch:

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            export DB_USER=${{ secrets.DB_USER_TWO }}
            export DB_NAME=${{ secrets.DB_NAME_TWO }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD_TWO }}
            export SECRET_KEY='${{ secrets.SECRET_KEY }}'
            export DATABASE_URL=${{ secrets.DATABASE_URL }}
            export QDRANT_URL=${{ secrets.QDRANT_URL_TWO }}
            export QDRANT_SECRET=${{ secrets.QDRANT_SECRET_TWO }}
            export SPACY_NLP_MODEL=${{ secrets.SPACY_NLP_MODEL }}
            export TRANSFORMER_MODEL=${{ secrets.TRANSFORMER_MODEL }}
            export OPEN_AI_KEY=${{ secrets.OPEN_AI_KEY }}
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DEBUG=${{ secrets.DEBUG }}
            export JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            export JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}
            git -C ChatGPTfirewall pull || git clone https://github.com/ChatGPTfirewall/ChatGPTfirewall.git ChatGPTfirewall
            cd ChatGPTfirewall
            mkdir -p cert/
            echo "dns_cloudflare_api_token =$CLOUDFLARE_API_TOKEN" > ./cert/cloudflare.ini 
            docker compose -f docker-compose.yml up -d
